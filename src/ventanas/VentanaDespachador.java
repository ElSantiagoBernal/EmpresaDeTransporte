/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import controladores.ControladorBus;
import excepciones.CampoPlacaVacioException;
import excepciones.CampoVacioException;
import excepciones.LlenarTodosLosAsientosDelVehiculoException;
import excepciones.MismaCiudadException;
import excepciones.ObjetoTablaNoSeleccionadoException;
import excepciones.RutaExistenteException;
import excepciones.RutaNoExistenteException;
import excepciones.VehiculoNoRegistradoException;
import excepciones.VehiculoYaRegistradoException;
import ventanas.VentanaAdministrador;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelos.Despachador;
import modelos.Pasajero;
import modelos.Ruta;
import modelos.Usuario;
import modelos.Vehiculo;
import ventanas.VentanaLogIn;

/**
 *
 * @author SANTIAGO
 */
public class VentanaDespachador extends javax.swing.JFrame {

    /**
     * Creates new form VentanaDespachador
     */
    VentanaLogIn ventanaLogIn;
    DefaultTableModel modeloBuses;
    DefaultTableModel modeloDespachos;

    public VentanaDespachador(VentanaLogIn ventanaLogIn) {
        initComponents();
        setLocationRelativeTo(this);
        declararColumnasTabla();
        declararColumnasTablaDespacho();
        this.ventanaLogIn = ventanaLogIn;
        validarDecisionAdmin();
        cmbEstadoVehiculo.setEnabled(false);
        btnEditar.setEnabled(false);
        btnEliminar.setEnabled(false);
        btnEliminargestionRuta.setEnabled(false);
        btnEditarGestionRuta.setEnabled(false);
        cargarInformacionTablaVehiculos();
        cargarInformacionTablaDespachos();
        txtPlacaBusEncargadoRuta.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox2 = new javax.swing.JComboBox<>();
        jTextField3 = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        btnCerrarSesion = new javax.swing.JButton();
        btnVolver = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        tpGestionRutas = new javax.swing.JTabbedPane();
        tpRegistrarBusesRutas = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        txtPlacaBus = new javax.swing.JTextField();
        cmbTipo = new javax.swing.JComboBox<>();
        txtCantidadAsientosBus = new javax.swing.JTextField();
        btnRegistroVehiculo = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        cmbEstadoVehiculo = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblBus = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        btnAceptar = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        txtOrigen = new javax.swing.JTextField();
        txtDestino = new javax.swing.JTextField();
        txtNumeroRuta = new javax.swing.JTextField();
        txtPrecioRuta = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        txtNumeroRutaGestionRuta = new javax.swing.JTextField();
        btnBuscarGestionRuta = new javax.swing.JButton();
        btnEditarGestionRuta = new javax.swing.JButton();
        btnEliminargestionRuta = new javax.swing.JButton();
        txtCiudadOrigenGestionRuta = new javax.swing.JTextField();
        txtCiudadDestinoGestionRuta = new javax.swing.JTextField();
        txtPlacaBusEncargadoRuta = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtPrecioRutaGestion = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDespachos = new javax.swing.JTable();
        btnDespachar = new javax.swing.JButton();
        fondo = new javax.swing.JLabel();

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jTextField3.setText("jTextField3");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnCerrarSesion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/btnCerrarSesion.png"))); // NOI18N
        btnCerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarSesionActionPerformed(evt);
            }
        });
        getContentPane().add(btnCerrarSesion, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 390, 100, 30));

        btnVolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/btnVolver.png"))); // NOI18N
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });
        getContentPane().add(btnVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 390, 100, 30));

        jPanel2.setBackground(new java.awt.Color(0, 0, 0, 150));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "DESPACHADOR", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N

        tpRegistrarBusesRutas.setBackground(new java.awt.Color(0, 0, 0, 100));
        tpRegistrarBusesRutas.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "GESTION DE VEHICULOS", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N

        txtPlacaBus.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPlacaBus.setText("Placa");
        txtPlacaBus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtPlacaBusMouseClicked(evt);
            }
        });

        cmbTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione el tipo", "Bus", "Buseta", "Aero van" }));

        txtCantidadAsientosBus.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCantidadAsientosBus.setText("Cantidad asientos");
        txtCantidadAsientosBus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtCantidadAsientosBusMouseClicked(evt);
            }
        });
        txtCantidadAsientosBus.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCantidadAsientosBusKeyTyped(evt);
            }
        });

        btnRegistroVehiculo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/btnRegistrar.png"))); // NOI18N
        btnRegistroVehiculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistroVehiculoActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        cmbEstadoVehiculo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione el estado", "Habilitado", "Deshabilitado" }));

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Placa del vehículo");

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Cantidad de asientos");

        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Tipo de vehículo");

        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Estado vehículo");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(btnBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(btnEliminar)
                .addGap(18, 18, 18)
                .addComponent(btnEditar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRegistroVehiculo, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPlacaBus, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCantidadAsientosBus, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbEstadoVehiculo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addGap(70, 70, 70))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addGap(68, 68, 68))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPlacaBus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCantidadAsientosBus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbEstadoVehiculo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRegistroVehiculo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnEditar)
                        .addComponent(btnBuscar)
                        .addComponent(btnEliminar)))
                .addContainerGap())
        );

        tpRegistrarBusesRutas.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, 420, 260));

        tpGestionRutas.addTab("Gestion vehículos", tpRegistrarBusesRutas);

        jPanel4.setBackground(new java.awt.Color(0, 0, 0, 150));

        tblBus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblBus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBusMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblBus);

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Asigne un vehiculo para la ruta");

        btnAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/btnAceptar.png"))); // NOI18N
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        jPanel7.setBackground(new java.awt.Color(0, 0, 0));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "REGISTRO DE RUTAS", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N

        txtOrigen.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtOrigen.setText("Origen");
        txtOrigen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtOrigenMouseClicked(evt);
            }
        });
        txtOrigen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOrigenActionPerformed(evt);
            }
        });
        txtOrigen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtOrigenKeyTyped(evt);
            }
        });

        txtDestino.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDestino.setText("Destino");
        txtDestino.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtDestinoMouseClicked(evt);
            }
        });
        txtDestino.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDestinoKeyTyped(evt);
            }
        });

        txtNumeroRuta.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtNumeroRuta.setText("Numero de ruta");
        txtNumeroRuta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtNumeroRutaMouseClicked(evt);
            }
        });
        txtNumeroRuta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroRutaKeyTyped(evt);
            }
        });

        txtPrecioRuta.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPrecioRuta.setText("Precio");
        txtPrecioRuta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtPrecioRutaMouseClicked(evt);
            }
        });
        txtPrecioRuta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPrecioRutaKeyTyped(evt);
            }
        });

        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Numero ruta");

        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Ciudad origen");

        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Ciudad destino");

        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Precio ruta");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPrecioRuta)
                    .addComponent(txtNumeroRuta, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtDestino, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                    .addComponent(txtOrigen, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(31, 31, 31))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jLabel12))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jLabel13))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jLabel14)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel15)
                .addGap(61, 61, 61))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtNumeroRuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addGap(5, 5, 5)
                .addComponent(txtOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPrecioRuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 103, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(105, 105, 105))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnAceptar)))
                .addGap(691, 691, 691))
        );

        tpGestionRutas.addTab("Registro rutas", jPanel4);

        jPanel8.setBackground(new java.awt.Color(0, 0, 0, 150));

        jPanel9.setBackground(new java.awt.Color(0, 0, 0));
        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Gestion Rutas", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N

        txtNumeroRutaGestionRuta.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtNumeroRutaGestionRuta.setText("Numero ruta");
        txtNumeroRutaGestionRuta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtNumeroRutaGestionRutaMouseClicked(evt);
            }
        });
        txtNumeroRutaGestionRuta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroRutaGestionRutaKeyTyped(evt);
            }
        });

        btnBuscarGestionRuta.setText("Buscar");
        btnBuscarGestionRuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarGestionRutaActionPerformed(evt);
            }
        });

        btnEditarGestionRuta.setText("Editar");
        btnEditarGestionRuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarGestionRutaActionPerformed(evt);
            }
        });

        btnEliminargestionRuta.setText("Eliminar");
        btnEliminargestionRuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminargestionRutaActionPerformed(evt);
            }
        });

        txtCiudadOrigenGestionRuta.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCiudadOrigenGestionRuta.setText("Ciudad origen");
        txtCiudadOrigenGestionRuta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtCiudadOrigenGestionRutaMouseClicked(evt);
            }
        });
        txtCiudadOrigenGestionRuta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCiudadOrigenGestionRutaKeyTyped(evt);
            }
        });

        txtCiudadDestinoGestionRuta.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCiudadDestinoGestionRuta.setText("Ciudad destino");
        txtCiudadDestinoGestionRuta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtCiudadDestinoGestionRutaMouseClicked(evt);
            }
        });
        txtCiudadDestinoGestionRuta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCiudadDestinoGestionRutaKeyTyped(evt);
            }
        });

        txtPlacaBusEncargadoRuta.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPlacaBusEncargadoRuta.setText("Placa del bus encargado");

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Numero ruta");

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Ciudad origen");

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Ciudad destino");

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Placa del bus");

        txtPrecioRutaGestion.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPrecioRutaGestion.setText("Precio ruta");
        txtPrecioRutaGestion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtPrecioRutaGestionMouseClicked(evt);
            }
        });
        txtPrecioRutaGestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecioRutaGestionActionPerformed(evt);
            }
        });
        txtPrecioRutaGestion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPrecioRutaGestionKeyTyped(evt);
            }
        });

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Precio ruta");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addGap(48, 48, 48))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNumeroRutaGestionRuta, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCiudadOrigenGestionRuta, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtPlacaBusEncargadoRuta, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                                    .addComponent(txtPrecioRutaGestion)))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(txtCiudadDestinoGestionRuta, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(btnBuscarGestionRuta)
                                .addGap(73, 73, 73)
                                .addComponent(btnEditarGestionRuta)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnEliminargestionRuta)))))
                .addGap(22, 22, 22))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(64, 64, 64))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNumeroRutaGestionRuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPlacaBusEncargadoRuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCiudadOrigenGestionRuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPrecioRutaGestion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCiudadDestinoGestionRuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscarGestionRuta)
                    .addComponent(btnEditarGestionRuta)
                    .addComponent(btnEliminargestionRuta))
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(85, Short.MAX_VALUE)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(22, 22, 22))
        );

        tpGestionRutas.addTab("Gestion Rutas", jPanel8);

        tblDespachos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblDespachos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDespachosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDespachos);

        btnDespachar.setText("Despachar");
        btnDespachar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDespacharActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(456, Short.MAX_VALUE)
                .addComponent(btnDespachar)
                .addGap(20, 20, 20))
            .addComponent(jScrollPane1)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDespachar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tpGestionRutas.addTab("Despachos", jPanel6);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tpGestionRutas, javax.swing.GroupLayout.PREFERRED_SIZE, 564, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(tpGestionRutas, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 9, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 600, 360));

        fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Bus2.png"))); // NOI18N
        getContentPane().add(fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarSesionActionPerformed
        // TODO add your handling code here:

        dispose();
        ventanaLogIn.setVisible(true);

    }//GEN-LAST:event_btnCerrarSesionActionPerformed

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        // TODO add your handling code here:
        dispose();
        VentanaAdministrador ventana = new VentanaAdministrador(ventanaLogIn);
        ventana.setVisible(true);
    }//GEN-LAST:event_btnVolverActionPerformed

    private void txtPlacaBusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPlacaBusMouseClicked
        // TODO add your handling code here:
        txtPlacaBus.setText(null);
    }//GEN-LAST:event_txtPlacaBusMouseClicked

    private void txtCantidadAsientosBusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCantidadAsientosBusMouseClicked
        // TODO add your handling code here:
        txtCantidadAsientosBus.setText(null);
    }//GEN-LAST:event_txtCantidadAsientosBusMouseClicked

    private void btnRegistroVehiculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistroVehiculoActionPerformed
        // TODO add your handling code here:
        try {
            if (txtPlacaBus.getText().isEmpty() || cmbTipo.getSelectedItem().toString().equals("Seleccione el tipo")
                    || txtCantidadAsientosBus.getText().isEmpty() || txtPlacaBus.getText().equals("Placa")
                    || txtCantidadAsientosBus.getText().equals("Cantidad asientos")) {
                throw new CampoVacioException();
            }
            String placa = txtPlacaBus.getText();
            String tipo = cmbTipo.getSelectedItem().toString();
            int asientos = Integer.parseInt(txtCantidadAsientosBus.getText());
            Vehiculo vehiculo = new Vehiculo(placa, tipo, asientos, true, false);
            ventanaLogIn.controladorBus.registrarVehiculo(vehiculo);
            JOptionPane.showMessageDialog(null, "Se registro");
            llenartablaBuses(vehiculo);
            limpiarCamposVehiculo();
        } catch (VehiculoYaRegistradoException | CampoVacioException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }


    }//GEN-LAST:event_btnRegistroVehiculoActionPerformed

    private void txtOrigenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOrigenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOrigenActionPerformed

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        // TODO add your handling code here:
        try {
            int seleccion = tblBus.getSelectedRow();
            if (seleccion < 0) {
                throw new ObjetoTablaNoSeleccionadoException();
            } else if (txtNumeroRuta.getText().isEmpty() || txtOrigen.getText().isEmpty()
                    || txtDestino.getText().isEmpty() || txtNumeroRuta.getText().equals("Numero de ruta")
                    || txtOrigen.getText().equals("Origen") || txtDestino.getText().equals("Destino")
                    || txtPrecioRuta.getText().isEmpty() || txtPrecioRuta.getText().equals("Precio")) {
                throw new CampoVacioException();
            }
            String origen = txtOrigen.getText();
            String destino = txtDestino.getText();
            if (origen.equals(destino)) {
                throw new MismaCiudadException();
            }
            String estado = String.valueOf(tblBus.getValueAt(seleccion, 3));
            String placa = String.valueOf(tblBus.getValueAt(seleccion, 1));
            String Numruta = txtNumeroRuta.getText();
            String precio = txtPrecioRuta.getText();
            Vehiculo vehiculo = ventanaLogIn.controladorBus.buscarVehiculo(placa);

            if (vehiculo != null && vehiculo.isEstado() && estado.equals("Habilitado")
                    && vehiculo.isRuta() == false) {
                Ruta ruta = new Ruta(Numruta, origen, destino, vehiculo, precio);
                ventanaLogIn.controladorRuta.registrarRuta(ruta);
                JOptionPane.showMessageDialog(null, "Se registro la ruta");
                limpiarCamposRegistroRuta();
                ventanaLogIn.controladorBus.editarRutaYEstado(vehiculo.getPlaca(), true, false);
                llenarTablaDespachos(ruta);
            } else {
                JOptionPane.showMessageDialog(null, "El vehiculo tiene que estar habilitado o sin ruta");
            }
            if (vehiculo.isRuta()) {
                editarEstadoVehiculo(vehiculo);
            }
        } catch (CampoVacioException | RutaExistenteException | MismaCiudadException | ObjetoTablaNoSeleccionadoException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }

    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        try {
            if (txtPlacaBus.getText().isEmpty() || txtPlacaBus.getText().equals("Placa")) {
                throw new CampoPlacaVacioException();
            }
            String placaVehiculo = txtPlacaBus.getText();
            Vehiculo vehiculo = ventanaLogIn.controladorBus.buscarVehiculo(placaVehiculo);
            if (vehiculo != null) {
                btnEditar.setEnabled(true);
                btnEliminar.setEnabled(true);
                cmbEstadoVehiculo.setEnabled(true);
                txtCantidadAsientosBus.setText(String.valueOf(vehiculo.getCantidadSillas()));
                cmbTipo.setSelectedItem(vehiculo.getTipo());
                validarEstadoVehiculo(vehiculo);
            } else {
                JOptionPane.showMessageDialog(null, "El vehiculo no esta registrado");
                limpiarCamposVehiculo();
            }
        } catch (CampoPlacaVacioException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }

    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        try {
            if (txtPlacaBus.getText().isEmpty() || txtPlacaBus.getText().equals("Placa")) {
                throw new CampoPlacaVacioException();
            }
            String placaVehiculo = txtPlacaBus.getText();
            Vehiculo vehiculo = ventanaLogIn.controladorBus.buscarVehiculo(placaVehiculo);

            if (vehiculo != null && vehiculo.isRuta() == false) {
                ventanaLogIn.controladorBus.eliminarVehiculo(placaVehiculo);
                JOptionPane.showMessageDialog(null, "Se elimino el vehiculo");
                eliminarBusTabla(placaVehiculo);
                limpiarCamposVehiculo();
                btnEliminar.setEnabled(false);
                btnEditar.setEnabled(false);
            } else if (vehiculo != null && vehiculo.isRuta()) {
                JOptionPane.showMessageDialog(null, "No puedes eliminar un vehiculo que ya este vinvulado a una ruta"
                        + "\nSi deseas puedes eliminar la ruta para poder eliminar el vehiculo");
            } else if (vehiculo == null) {
                JOptionPane.showMessageDialog(null, "No hay vehiculo registrado");
            }
        } catch (RutaNoExistenteException | VehiculoNoRegistradoException | CampoPlacaVacioException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }

    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        try {
            if (txtPlacaBus.getText().isEmpty() || cmbTipo.getSelectedItem().toString().equals("Actividad")
                    || txtCantidadAsientosBus.getText().isEmpty() || cmbEstadoVehiculo.getSelectedItem().toString().equals("Estado")
                    || txtPlacaBus.getText().equals("Placa") || txtCantidadAsientosBus.getText().equals("Cantidad asientos")) {
                throw new CampoVacioException();
            } else if (cmbEstadoVehiculo.getSelectedItem().toString() == null) {
                JOptionPane.showMessageDialog(null, "No puede seleccionar un estado vacio");
                return;
            }

            String placa = txtPlacaBus.getText();
            String tipo = cmbTipo.getSelectedItem().toString();
            int asientos = Integer.parseInt(txtCantidadAsientosBus.getText());
            String estadoString = cmbEstadoVehiculo.getSelectedItem().toString();
            boolean estadoBol;
            if (estadoString.equals("Habilitado")) {
                estadoBol = true;
            } else {
                estadoBol = false;
            }
            Vehiculo vehiculo = ventanaLogIn.controladorBus.buscarVehiculo(placa);
            if (vehiculo != null) {
                if (vehiculo.obtenerTamañoLista() != 0) {
                    JOptionPane.showMessageDialog(null, "No puedes editar el vehiculo si ya esta en una ruta y tiene asientos ocupados");
                } else {
                    ventanaLogIn.controladorBus.editarInfoVehiculo(placa, asientos, estadoBol, tipo);
                    JOptionPane.showMessageDialog(null, "Se edito el vehiculo");
                    actualizarAsientosDsiponiblesVehiculo(vehiculo);
                    actualizarEstadoBusTabla(vehiculo);
                    btnEditar.setEnabled(false);
                    btnEliminar.setEnabled(false);
                    limpiarCamposVehiculo();
                    editarInfoBusTabla(placa, vehiculo.getCantidadSillas(), estadoString, tipo);
                    if (vehiculo.isRuta()) {
                        editarInformacionVehiculoRutaTabla(placa);
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "El vehiculo no esta registrado");
            }

        } catch (VehiculoNoRegistradoException | CampoVacioException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }

    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnDespacharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDespacharActionPerformed
        // TODO add your handling code here:
        try {
            int seleccion = tblDespachos.getSelectedRow();
            if (seleccion < 0) {
                throw new ObjetoTablaNoSeleccionadoException();
            }
            String numRuta = String.valueOf(tblDespachos.getValueAt(seleccion, 0));
            Ruta ruta = ventanaLogIn.controladorRuta.buscarRuta(numRuta);
            Vehiculo vehiculo = ventanaLogIn.controladorBus.buscarVehiculo(ruta.getVehiculo().getPlaca());
            if (vehiculo.obtenerEstaciosDisponibles() != 0) {
                throw new LlenarTodosLosAsientosDelVehiculoException();
            }
            if (vehiculo.getCantidadReservasSinPagar() == 0) {
                if (ruta != null) {
                    modeloDespachos.removeRow(seleccion);
                    ventanaLogIn.controladorRuta.eliminarRuta(numRuta);
                    ventanaLogIn.controladorBus.eliminarTodosLosUsuarios(vehiculo);
                    ventanaLogIn.controladorBus.editarRutaYEstado(vehiculo.getPlaca(), false, true);
                    actualizarEstadoVehiculo(vehiculo);
                    ventanaLogIn.controladorUsuario.añadirVehiculoDespachado(ventanaLogIn.usuarioLogeado);
                    JOptionPane.showMessageDialog(null, "Se ha despachado la ruta");
                } else {
                    JOptionPane.showMessageDialog(null, "La ruta no existe");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Primero se deben de vender todas las reservas");
            }
        } catch (ObjetoTablaNoSeleccionadoException | LlenarTodosLosAsientosDelVehiculoException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }


    }//GEN-LAST:event_btnDespacharActionPerformed

    private void txtOrigenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtOrigenMouseClicked
        // TODO add your handling code here:
        txtOrigen.setText(null);
    }//GEN-LAST:event_txtOrigenMouseClicked

    private void txtDestinoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDestinoMouseClicked
        // TODO add your handling code here:
        txtDestino.setText(null);
    }//GEN-LAST:event_txtDestinoMouseClicked

    private void tblBusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBusMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_tblBusMouseClicked

    private void tblDespachosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDespachosMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblDespachosMouseClicked

    private void btnBuscarGestionRutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarGestionRutaActionPerformed
        // TODO add your handling code here:
        if (txtNumeroRutaGestionRuta.getText().isEmpty() || txtNumeroRutaGestionRuta.getText().equals("Numero ruta")) {
            JOptionPane.showMessageDialog(null, "Debes diligenciar el numero de la ruta para poder buscarla");
            return;
        }
        String numRuta = txtNumeroRutaGestionRuta.getText();
        Ruta ruta = ventanaLogIn.controladorRuta.buscarRuta(numRuta);
        if (ruta != null) {
            txtCiudadOrigenGestionRuta.setText(ruta.getCiudadOrigen());
            txtCiudadDestinoGestionRuta.setText(ruta.getCiudadDestino());
            txtPlacaBusEncargadoRuta.setText(ruta.getVehiculo().getPlaca());
            txtPrecioRutaGestion.setText(ruta.getPrecio());
            btnEliminargestionRuta.setEnabled(true);
            btnEditarGestionRuta.setEnabled(true);
        } else {
            JOptionPane.showMessageDialog(null, "No hay ruta registrada con ese numero");
        }
    }//GEN-LAST:event_btnBuscarGestionRutaActionPerformed

    private void btnEditarGestionRutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarGestionRutaActionPerformed
        // TODO add your handling code here:
        try {
            if (txtNumeroRutaGestionRuta.getText().isEmpty() || txtCiudadOrigenGestionRuta.getText().isEmpty()
                    || txtCiudadDestinoGestionRuta.getText().isEmpty() || txtNumeroRutaGestionRuta.getText().equals("Numero ruta")
                    || txtCiudadOrigenGestionRuta.getText().equals("Ciudad origen") || txtCiudadDestinoGestionRuta.getText().equals("Ciudad destino")
                    || txtPrecioRutaGestion.getText().isEmpty() || txtPrecioRutaGestion.getText().equals("Precio ruta")) {
                throw new CampoVacioException();
            }
            String numRuta = txtNumeroRutaGestionRuta.getText();
            String nuevoOrigen = txtCiudadOrigenGestionRuta.getText();
            String nuevoDestino = txtCiudadDestinoGestionRuta.getText();
            String nuevoPrecio = txtPrecioRutaGestion.getText();
            Ruta ruta = ventanaLogIn.controladorRuta.buscarRuta(numRuta);
            if (ruta != null) {
                Vehiculo vehiculo = ventanaLogIn.controladorBus.buscarVehiculo(ruta.getVehiculo().getPlaca());
                if (vehiculo.obtenerTamañoLista() == 0) {
                    if (nuevoDestino.equals(nuevoOrigen)) {
                        throw new MismaCiudadException();
                    } else {
                        ventanaLogIn.controladorRuta.editarInformacioRuta(nuevoPrecio, numRuta, nuevoOrigen, nuevoDestino);
                        JOptionPane.showMessageDialog(null, "Se edito");
                        limpiarCamposGestionRuta();
                        editarInfoTablaDespachos(numRuta, nuevoOrigen, nuevoDestino);
                        btnEditarGestionRuta.setEnabled(false);
                        btnEliminargestionRuta.setEnabled(false);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "No podras editar la ruta si ya se tienen pasajeros en el vehiculo de esta");
                }

            } else {
                JOptionPane.showMessageDialog(null, "La ruta o esta registrada");
            }
        } catch (RutaNoExistenteException | CampoVacioException | MismaCiudadException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }


    }//GEN-LAST:event_btnEditarGestionRutaActionPerformed

    private void btnEliminargestionRutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminargestionRutaActionPerformed
        // TODO add your handling code here:
        if (txtNumeroRutaGestionRuta.getText().isEmpty() || txtNumeroRutaGestionRuta.getText().equals("Numero ruta")) {
            JOptionPane.showMessageDialog(null, "Debes diligenciar el numero de la ruta para eliminarla");
            return;
        }
        Ruta ruta = ventanaLogIn.controladorRuta.buscarRuta(txtNumeroRutaGestionRuta.getText());
        if (ruta != null) {
            Vehiculo vehiculo = ventanaLogIn.controladorBus.buscarVehiculo(ruta.getVehiculo().getPlaca());
            if (vehiculo.obtenerTamañoLista() == 0) {
                try {
                    String numRuta = txtNumeroRutaGestionRuta.getText();
                    ventanaLogIn.controladorRuta.eliminarRuta(numRuta);
                    JOptionPane.showMessageDialog(null, "Se elimino");
                    ventanaLogIn.controladorBus.editarRutaYEstado(vehiculo.getPlaca(), false, true);
                    limpiarCamposGestionRuta();
                    eliminarRutaTabla(numRuta);
                    actualizarEstadoBusTabla(ruta.getVehiculo());
                    btnEditarGestionRuta.setEnabled(false);
                    btnEliminargestionRuta.setEnabled(false);
                } catch (RutaNoExistenteException ex) {
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                }
            } else {
                JOptionPane.showMessageDialog(null, "No podras eliminar una ruta si ya tiene pasajeros en ella");
            }
        } else {
            JOptionPane.showMessageDialog(null, "La ruta no esta registrada");
        }


    }//GEN-LAST:event_btnEliminargestionRutaActionPerformed

    private void txtCantidadAsientosBusKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadAsientosBusKeyTyped
        // TODO add your handling code here:char c = evt.getKeyChar();
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }

    }//GEN-LAST:event_txtCantidadAsientosBusKeyTyped

    private void txtNumeroRutaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtNumeroRutaMouseClicked
        // TODO add your handling code here:
        txtNumeroRuta.setText(null);
    }//GEN-LAST:event_txtNumeroRutaMouseClicked

    private void txtNumeroRutaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroRutaKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtNumeroRutaKeyTyped

    private void txtOrigenKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOrigenKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtOrigenKeyTyped

    private void txtDestinoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDestinoKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtDestinoKeyTyped

    private void txtNumeroRutaGestionRutaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtNumeroRutaGestionRutaMouseClicked
        // TODO add your handling code here:
        txtNumeroRutaGestionRuta.setText(null);
    }//GEN-LAST:event_txtNumeroRutaGestionRutaMouseClicked

    private void txtNumeroRutaGestionRutaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroRutaGestionRutaKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }

    }//GEN-LAST:event_txtNumeroRutaGestionRutaKeyTyped

    private void txtCiudadOrigenGestionRutaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCiudadOrigenGestionRutaMouseClicked
        // TODO add your handling code here:
        txtCiudadOrigenGestionRuta.setText(null);
    }//GEN-LAST:event_txtCiudadOrigenGestionRutaMouseClicked

    private void txtCiudadOrigenGestionRutaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCiudadOrigenGestionRutaKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtCiudadOrigenGestionRutaKeyTyped

    private void txtCiudadDestinoGestionRutaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCiudadDestinoGestionRutaMouseClicked
        // TODO add your handling code here:
        txtCiudadDestinoGestionRuta.setText(null);
    }//GEN-LAST:event_txtCiudadDestinoGestionRutaMouseClicked

    private void txtCiudadDestinoGestionRutaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCiudadDestinoGestionRutaKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtCiudadDestinoGestionRutaKeyTyped

    private void txtPrecioRutaGestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecioRutaGestionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecioRutaGestionActionPerformed

    private void txtPrecioRutaGestionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPrecioRutaGestionMouseClicked
        // TODO add your handling code here:
        txtPrecioRutaGestion.setText(null);
    }//GEN-LAST:event_txtPrecioRutaGestionMouseClicked

    private void txtPrecioRutaGestionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioRutaGestionKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }

    }//GEN-LAST:event_txtPrecioRutaGestionKeyTyped

    private void txtPrecioRutaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPrecioRutaMouseClicked
        // TODO add your handling code here:
        txtPrecioRuta.setText(null);
    }//GEN-LAST:event_txtPrecioRutaMouseClicked

    private void txtPrecioRutaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioRutaKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
        }
    }//GEN-LAST:event_txtPrecioRutaKeyTyped
    private void llenartablaBuses(Vehiculo vehiculo) {
        String datos[] = new String[4];
        datos[0] = vehiculo.getTipo();
        datos[1] = vehiculo.getPlaca();
        datos[2] = String.valueOf(vehiculo.getCantidadSillas());
        String estadoString = "";
        boolean estado = vehiculo.isEstado();
        if (estado) {
            estadoString = "Habilitado";
        } else {
            estadoString = "Inhabilitado";
        }
        datos[3] = estadoString;
        modeloBuses.addRow(datos);

    }

    private void eliminarBusTabla(String placa) {
        for (int i = 0; i < modeloBuses.getRowCount(); i++) {
            if (modeloBuses.getValueAt(i, 1).equals(placa)) {
                modeloBuses.removeRow(i);
            }
        }

    }

    private void editarInfoBusTabla(String placa, int nuevaCantidadAsientos, String nuevoEstado,
            String nuevoTipo) {
        for (int i = 0; i < modeloBuses.getRowCount(); i++) {
            if (modeloBuses.getValueAt(i, 1).equals(placa)) {
                modeloBuses.setValueAt(nuevoTipo, i, 0);
                modeloBuses.setValueAt(nuevaCantidadAsientos, i, 2);
                modeloBuses.setValueAt(nuevoEstado, i, 3);
            }
        }

    }

    private void editarEstadoVehiculo(Vehiculo vehiculo) {
        for (int i = 0; i < modeloBuses.getRowCount(); i++) {
            if (modeloBuses.getValueAt(i, 1).equals(vehiculo.getPlaca())) {
                modeloBuses.setValueAt("En ruta", i, 3);
            }
        }
    }

    private void llenarTablaDespachos(Ruta ruta) {
        Vehiculo vehiculo = ventanaLogIn.controladorBus.buscarVehiculo(ruta.getVehiculo().getPlaca());
        String[] datos = new String[8];
        datos[0] = ruta.getNumeroRuta();
        datos[1] = ruta.getCiudadOrigen();
        datos[2] = ruta.getCiudadDestino();
        datos[3] = vehiculo.getTipo();
        datos[4] = vehiculo.getPlaca();
        datos[5] = String.valueOf(vehiculo.getCantidadSillas());
        datos[6] = String.valueOf(vehiculo.obtenerEstaciosDisponibles());
        datos[7] = "Esperando";
        modeloDespachos.addRow(datos);
    }

    private void eliminarRutaTabla(String numRuta) {
        for (int i = 0; i < modeloDespachos.getRowCount(); i++) {
            if (modeloDespachos.getValueAt(i, 0).equals(numRuta)) {
                modeloDespachos.removeRow(i);
            }
        }
    }

    private void editarInformacionVehiculoRutaTabla(String placaVehiculo) {
        Vehiculo vehiculo = ventanaLogIn.controladorBus.buscarVehiculo(placaVehiculo);
        for (int i = 0; i < modeloDespachos.getRowCount(); i++) {
            if (modeloDespachos.getValueAt(i, 4).equals(placaVehiculo)) {
                modeloDespachos.setValueAt(vehiculo.getTipo(), i, 3);
                modeloDespachos.setValueAt(vehiculo.getCantidadSillas(), i, 5);
            }
        }

    }

    private void declararColumnasTabla() {
        modeloBuses = new DefaultTableModel();
        modeloBuses.addColumn("Tipo de bus");
        modeloBuses.addColumn("Placa");
        modeloBuses.addColumn("Asientos");
        modeloBuses.addColumn("Estado");
        this.tblBus.setModel(modeloBuses);
    }

    private void declararColumnasTablaDespacho() {
        modeloDespachos = new DefaultTableModel();
        modeloDespachos.addColumn("Ruta");
        modeloDespachos.addColumn("Origen");
        modeloDespachos.addColumn("Destino");
        modeloDespachos.addColumn("Vehic.");
        modeloDespachos.addColumn("Placa");
        modeloDespachos.addColumn("Sillas");
        modeloDespachos.addColumn("Disponibles");
        modeloDespachos.addColumn("Estado");
        this.tblDespachos.setModel(modeloDespachos);
    }

    private void cargarInformacionTablaVehiculos() {
        for (int i = 0; i < ventanaLogIn.controladorBus.obtenerTamaño(); i++) {
            Vehiculo vehiculo = ventanaLogIn.controladorBus.recorrerLista(i);
            String datos[] = new String[4];
            datos[0] = vehiculo.getTipo();
            datos[1] = vehiculo.getPlaca();
            datos[2] = String.valueOf(vehiculo.getCantidadSillas());
            boolean estado = vehiculo.isEstado();
            if (estado) {
                datos[3] = "Habilitado";
            } else {
                datos[3] = "Deshabilitado";
            }

            if (vehiculo.isRuta()) {
                datos[3] = "En ruta";
            }

//            datos[3] = estadoString;
            modeloBuses.addRow(datos);

        }
    }

    private void cargarInformacionTablaDespachos() {
        for (int i = 0; i < ventanaLogIn.controladorRuta.obtenerTamañoLista(); i++) {
            Ruta ruta = ventanaLogIn.controladorRuta.recorrerLista(i);
            Vehiculo vehiculo = ventanaLogIn.controladorBus.buscarVehiculo(ruta.getVehiculo().getPlaca());
            String[] datos = new String[8];
            datos[0] = ruta.getNumeroRuta();
            datos[1] = ruta.getCiudadOrigen();
            datos[2] = ruta.getCiudadDestino();
            datos[3] = vehiculo.getTipo();
            datos[4] = vehiculo.getPlaca();
            datos[5] = String.valueOf(vehiculo.getCantidadSillas());
            datos[6] = String.valueOf(vehiculo.obtenerEstaciosDisponibles());
//            if (ruta.isEstado()) {
//                datos[7] = "Proceso";
//            } else {
            datos[7] = "Esperando";
//            }

            modeloDespachos.addRow(datos);
        }
    }

    private void editarInfoTablaDespachos(String numRuta, String nuevoOrigen, String nuevoDestino) {
        for (int i = 0; i < modeloDespachos.getRowCount(); i++) {
            if (modeloDespachos.getValueAt(i, 0).equals(numRuta)) {
                modeloDespachos.setValueAt(nuevoOrigen, i, 1);
                modeloDespachos.setValueAt(nuevoDestino, i, 2);
            }
        }
    }

    private void actualizarEstadoBusTabla(Vehiculo vehiculo) {
        if (vehiculo.isRuta() == false) {
            for (int i = 0; i < modeloBuses.getRowCount(); i++) {
                if (modeloBuses.getValueAt(i, 1).equals(vehiculo.getPlaca())) {
                    modeloBuses.setValueAt("Habilitado", i, 3);
                }
            }
        }
    }

    private void actualizarAsientosDsiponiblesVehiculo(Vehiculo vehiculo) {
        for (int i = 0; i < modeloDespachos.getRowCount(); i++) {
            if (modeloDespachos.getValueAt(i, 4).equals(vehiculo.getPlaca())) {
                modeloDespachos.setValueAt(vehiculo.obtenerEstaciosDisponibles(), i, 6);
            }
        }
    }

    private void limpiarCamposVehiculo() {
        txtPlacaBus.setText("Placa");
        txtCantidadAsientosBus.setText("Cantidad asientos");
        cmbTipo.setSelectedIndex(0);
        cmbEstadoVehiculo.setSelectedIndex(0);
        cmbEstadoVehiculo.setEnabled(false);
        cmbEstadoVehiculo.removeItem("En ruta");
    }

    private void limpiarCamposRegistroRuta() {
        txtNumeroRuta.setText("Numero de ruta");
        txtOrigen.setText("Origen");
        txtDestino.setText("Destino");
        txtPrecioRuta.setText("Precio");
    }

    private void limpiarCamposGestionRuta() {
        txtNumeroRutaGestionRuta.setText("Numero ruta");
        txtCiudadOrigenGestionRuta.setText("Ciudad origen");
        txtCiudadDestinoGestionRuta.setText("Ciudad destino");
        txtPlacaBusEncargadoRuta.setText("Placa del bus encargado");
        txtPrecioRutaGestion.setText("Precio ruta");
    }

    private void añadirVehiculoDespachado() {
        Usuario usuario = ventanaLogIn.usuarioLogeado;
        if (usuario instanceof Despachador) {
            ((Despachador) usuario).añadirVehiculoDspachado();
        }
    }

    private void actualizarEstadoVehiculo(Vehiculo vehiculo) {
        for (int i = 0; i < modeloBuses.getRowCount(); i++) {
            if (modeloBuses.getValueAt(i, 1).equals(vehiculo.getPlaca())) {
                if (vehiculo.isEstado() && vehiculo.isRuta() == false) {
                    modeloBuses.setValueAt("Habilitado", i, 3);
                }
            }
        }
    }

    private int hallarPasajerosConReservaSinPagar(Vehiculo vehiculo) {
        int contador = 0;
        for (int i = 0; i < vehiculo.obtenerTamañoLista(); i++) {
            Usuario user = vehiculo.recorrerListaPersonasAsientos(i);
            if (user instanceof Pasajero) {
                if (((Pasajero) user).getReserva() != null) {
                    contador++;
                }
            }

        }
        return contador;
    }

    private void validarEstadoVehiculo(Vehiculo vehiculo) {
        if (vehiculo.isEstado()) {
            cmbEstadoVehiculo.setSelectedItem("Habilitado");
        } else if (vehiculo.isRuta()) {
            cmbEstadoVehiculo.addItem("En ruta");
            cmbEstadoVehiculo.setSelectedItem("En ruta");
            cmbEstadoVehiculo.setEnabled(false);
        } else {
            cmbEstadoVehiculo.setSelectedItem("Deshabilitado");
        }
    }

    private void validarDecisionAdmin() {
        if (VentanaAdministrador.decision.equals("Tomar rol")) {
            btnVolver.setEnabled(true);
            VentanaAdministrador.decision = "";
        } else {
            btnVolver.setEnabled(false);
        }
    }

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(VentanaDespachador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(VentanaDespachador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(VentanaDespachador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(VentanaDespachador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new VentanaDespachador().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnBuscarGestionRuta;
    private javax.swing.JButton btnCerrarSesion;
    private javax.swing.JButton btnDespachar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEditarGestionRuta;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnEliminargestionRuta;
    private javax.swing.JButton btnRegistroVehiculo;
    private javax.swing.JButton btnVolver;
    private javax.swing.JComboBox<String> cmbEstadoVehiculo;
    private javax.swing.JComboBox<String> cmbTipo;
    private javax.swing.JLabel fondo;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTable tblBus;
    private javax.swing.JTable tblDespachos;
    private javax.swing.JTabbedPane tpGestionRutas;
    private javax.swing.JPanel tpRegistrarBusesRutas;
    private javax.swing.JTextField txtCantidadAsientosBus;
    private javax.swing.JTextField txtCiudadDestinoGestionRuta;
    private javax.swing.JTextField txtCiudadOrigenGestionRuta;
    private javax.swing.JTextField txtDestino;
    private javax.swing.JTextField txtNumeroRuta;
    private javax.swing.JTextField txtNumeroRutaGestionRuta;
    private javax.swing.JTextField txtOrigen;
    private javax.swing.JTextField txtPlacaBus;
    private javax.swing.JTextField txtPlacaBusEncargadoRuta;
    private javax.swing.JTextField txtPrecioRuta;
    private javax.swing.JTextField txtPrecioRutaGestion;
    // End of variables declaration//GEN-END:variables
}
