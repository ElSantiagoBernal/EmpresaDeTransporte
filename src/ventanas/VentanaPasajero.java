package ventanas;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import excepciones.AsientoVehiculoCompletoException;
import excepciones.ObjetoTablaNoSeleccionadoException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelos.Pasajero;
import modelos.Ruta;
import modelos.Tiquete;
import modelos.Usuario;
import modelos.Vehiculo;
import ventanas.VentanaLogIn;

/**
 *
 * @author SANTIAGO
 */
public class VentanaPasajero extends javax.swing.JFrame {

    /**
     * Creates new form VentanaPasajero
     */
    VentanaLogIn ventanaLogIn;
    DefaultTableModel modeloRutas;
    DefaultTableModel modeloReserva;
    DefaultTableModel modeloHistorialTiquetesComprados;

    public VentanaPasajero(VentanaLogIn ventanaLogIn) {
        initComponents();
        setLocationRelativeTo(this);
        this.ventanaLogIn = ventanaLogIn;
        declararColumnasTablaRutas();
        declararColumnasTablaReserva();
        declararComulmasTablaHistorialTiquetes();
        llenarTablaConRutas();
        llenarTablaReserva();
        llenartablaHistorialTiquetesComprados();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRutasDisponibles = new javax.swing.JTable();
        btnReserva = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblHistorialTiquetes = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblReserva = new javax.swing.JTable();
        btnCerrar = new javax.swing.JButton();
        fondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 0, 0, 150));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PASAJERO", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));

        tblRutasDisponibles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblRutasDisponibles);

        btnReserva.setText("Reservar");
        btnReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReservaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(56, Short.MAX_VALUE)
                .addComponent(btnReserva)
                .addGap(430, 430, 430))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnReserva)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Rutas disponibles", jPanel2);

        jPanel4.setBackground(new java.awt.Color(0, 0, 0));

        tblHistorialTiquetes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tblHistorialTiquetes);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Historial de tiquetes comprados", jPanel4);

        tblReserva.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tblReserva);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 543, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(168, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Reservas", jPanel5);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 580, 360));

        btnCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/btnCerrarSesion.png"))); // NOI18N
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });
        getContentPane().add(btnCerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 380, 100, 30));

        fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Bus2.png"))); // NOI18N
        getContentPane().add(fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        // TODO add your handling code here:
        dispose();
        ventanaLogIn.setVisible(true);
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void btnReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReservaActionPerformed
        // TODO add your handling code here:
        try {
            int seleccion = tblRutasDisponibles.getSelectedRow();
            if (seleccion < 0) {
                throw new ObjetoTablaNoSeleccionadoException();
            }
            String numeroRuta = String.valueOf(modeloRutas.getValueAt(seleccion, 0));
            Ruta ruta = ventanaLogIn.controladorRuta.buscarRuta(numeroRuta);
            Vehiculo vehiculo = ventanaLogIn.controladorBus.buscarVehiculo(ruta.getVehiculo().getPlaca());
            Usuario usuario = ventanaLogIn.usuarioLogeado;
            if (vehiculo.obtenerEstaciosDisponibles() == 0) {
                throw new AsientoVehiculoCompletoException();
            }

            if (usuario instanceof Pasajero) {
                if (((Pasajero) usuario).getReserva() == null) {
                    ventanaLogIn.controladorUsuario.editarReserva(usuario.getIdentificacion(), ruta);
                    ventanaLogIn.controladorBus.añadirPersonaAlAsiento(usuario, ruta.getVehiculo());
                    ventanaLogIn.controladorBus.aumentarCantidadReserva(vehiculo);
                    actualizarAsientosDisponiblesVehiculo(vehiculo);
                    llenarTablaReserva();
                    JOptionPane.showMessageDialog(null, "El pasajero ha realizado la reserva con éxito");
                } else {
                    JOptionPane.showMessageDialog(null, "El pasajero ya cuenta con una reserva se debe de completar la compra de esta");
                }
            }
        } catch (ObjetoTablaNoSeleccionadoException | AsientoVehiculoCompletoException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }


    }//GEN-LAST:event_btnReservaActionPerformed

    private void declararColumnasTablaRutas() {
        modeloRutas = new DefaultTableModel();
        modeloRutas.addColumn("Ruta");
        modeloRutas.addColumn("Origen");
        modeloRutas.addColumn("Destino");
        modeloRutas.addColumn("Tipo bus");
        modeloRutas.addColumn("Placa");
        modeloRutas.addColumn("Asi.disponibles");
        modeloRutas.addColumn("Precio");
        this.tblRutasDisponibles.setModel(modeloRutas);

    }

    private void llenarTablaConRutas() {
        for (int i = 0; i < ventanaLogIn.controladorRuta.obtenerTamañoLista(); i++) {
            Ruta ruta = ventanaLogIn.controladorRuta.recorrerLista(i);
            Vehiculo vehiculo = ventanaLogIn.controladorBus.buscarVehiculo(ruta.getVehiculo().getPlaca());
            String[] datosFila = new String[7];
            datosFila[0] = String.valueOf(ruta.getNumeroRuta());
            datosFila[1] = ruta.getCiudadOrigen();
            datosFila[2] = ruta.getCiudadDestino();
            datosFila[3] = ruta.getVehiculo().getTipo();
            datosFila[4] = ruta.getVehiculo().getPlaca();
            datosFila[5] = String.valueOf(vehiculo.obtenerEstaciosDisponibles());
            datosFila[6] = "$" + ruta.getPrecio();
            modeloRutas.addRow(datosFila);

        }
    }

    private void actualizarAsientosDisponiblesVehiculo(Vehiculo vehiculo) {
        for (int i = 0; i < modeloRutas.getRowCount(); i++) {
            if (modeloRutas.getValueAt(i, 4).equals(vehiculo.getPlaca())) {
                modeloRutas.setValueAt(vehiculo.obtenerEstaciosDisponibles(), i, 5);
            }
        }
    }

    private void declararColumnasTablaReserva() {
        modeloReserva = new DefaultTableModel();
        modeloReserva.addColumn("Ruta");
        modeloReserva.addColumn("Origen");
        modeloReserva.addColumn("Destino");
        modeloReserva.addColumn("Tipo");
        modeloReserva.addColumn("Placa");
        modeloReserva.addColumn("Asientos");
        modeloReserva.addColumn("Precio");
        this.tblReserva.setModel(modeloReserva);
    }

    private void llenarTablaReserva() {
        Usuario usuario = ventanaLogIn.usuarioLogeado;
        if (usuario instanceof Pasajero) {
            System.out.println(((Pasajero) usuario).getReserva());
            if (((Pasajero) usuario).getReserva() != null) {
                String[] datos = new String[7];
                datos[0] = ((Pasajero) usuario).getReserva().getNumeroRuta();
                datos[1] = ((Pasajero) usuario).getReserva().getCiudadOrigen();
                datos[2] = ((Pasajero) usuario).getReserva().getCiudadDestino();
                datos[3] = ((Pasajero) usuario).getReserva().getVehiculo().getTipo();
                datos[4] = ((Pasajero) usuario).getReserva().getVehiculo().getPlaca();
                datos[5] = String.valueOf(((Pasajero) usuario).getReserva().getVehiculo().getCantidadSillas());
                datos[6] = "$" + ((Pasajero) usuario).getReserva().getPrecio();
                modeloReserva.addRow(datos);
            }

        }

    }

    private void declararComulmasTablaHistorialTiquetes() {
        modeloHistorialTiquetesComprados = new DefaultTableModel();
        modeloHistorialTiquetesComprados.addColumn("Fecha");
        modeloHistorialTiquetesComprados.addColumn("Hora");
        modeloHistorialTiquetesComprados.addColumn("Origen");
        modeloHistorialTiquetesComprados.addColumn("Destino");
        modeloHistorialTiquetesComprados.addColumn("Placa vehiculo");
        modeloHistorialTiquetesComprados.addColumn("Valor");
        this.tblHistorialTiquetes.setModel(modeloHistorialTiquetesComprados);
    }

    private void llenartablaHistorialTiquetesComprados() {

        Usuario usuario = ventanaLogIn.usuarioLogeado;
        if (usuario instanceof Pasajero) {
            for (int i = 0; i < ((Pasajero) usuario).obtenerTamañoListaTiquetes(); i++) {
                Tiquete tiquetes = ((Pasajero) usuario).recorrerListaTiquetes(i);
                String[] datos = new String[6];
                datos[0] = tiquetes.getFecha();
                datos[1] = tiquetes.getHora();
                datos[2] = tiquetes.getRuta().getCiudadOrigen();
                datos[3] = tiquetes.getRuta().getCiudadDestino();
                datos[4] = tiquetes.getVehiculo().getPlaca();
                datos[5] = "$" + tiquetes.getRuta().getPrecio();
                modeloHistorialTiquetesComprados.addRow(datos);
            }
        }
    }

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(VentanaPasajero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(VentanaPasajero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(VentanaPasajero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(VentanaPasajero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new VentanaPasajero().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnReserva;
    private javax.swing.JLabel fondo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tblHistorialTiquetes;
    private javax.swing.JTable tblReserva;
    private javax.swing.JTable tblRutasDisponibles;
    // End of variables declaration//GEN-END:variables
}
